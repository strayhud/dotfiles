# Subversion & Diff ------------------------------------------------
export SVN_EDITOR='${EDITOR}'

alias svshowcommands="echo -e '${COLOR_LIGHT_PURPLE}Available commands:
   ${COLOR_BLUE}sv
   ${COLOR_BLUE}sv${COLOR_NC}help
   ${COLOR_BLUE}sv${COLOR_NC}import    ${COLOR_GRAY}Example: import ~/projects/my_local_folder http://svn.foo.com/bar
   ${COLOR_BLUE}sv${COLOR_NC}checkout  ${COLOR_GRAY}Example: svcheckout http://svn.foo.com/bar
   ${COLOR_BLUE}sv${COLOR_NC}status
   ${COLOR_BLUE}sv${COLOR_NC}status${COLOR_BLUE}remote
   ${COLOR_BLUE}sv${COLOR_NC}add       ${COLOR_GRAY}Example: svadd your_file
   ${COLOR_BLUE}sv${COLOR_NC}add${COLOR_BLUE}all${COLOR_NC}    ${COLOR_GRAY}Note: adds all files not in repository [recursively]
   ${COLOR_BLUE}sv${COLOR_NC}delete    ${COLOR_GRAY}Example: svdelete your_file
   ${COLOR_BLUE}sv${COLOR_NC}diff      ${COLOR_GRAY}Example: svdiff your_file
   ${COLOR_BLUE}sv${COLOR_NC}diff${COLOR_BLUE}remote${COLOR_NC}   ${COLOR_GRAY}Example: svdiffremote your_file
   ${COLOR_BLUE}sv${COLOR_NC}commit    ${COLOR_GRAY}Example: svcommit
   ${COLOR_BLUE}sv${COLOR_NC}update    ${COLOR_GRAY}Example: svupdate
   ${COLOR_BLUE}sv${COLOR_NC}get${COLOR_BLUE}info${COLOR_NC}   ${COLOR_GRAY}Example: svgetinfo your_file
   ${COLOR_BLUE}sv${COLOR_NC}blame     ${COLOR_GRAY}Example: svblame your_file
   ${COLOR_BLUE}sv${COLOR_NC}delete${COLOR_BLUE}svn${COLOR_NC}folders   ${COLOR_GRAY}Example: svdeletesvnfolders
'"

alias sv='svn'
alias svimport='sv import'
alias svcheckout='sv checkout'
alias svstatusremote='sv status --show-updates' # Show status here and on the server
alias svcommit='sv commit'
alias svadd='sv add'
alias svaddall='sv status | grep "^\?" | awk "{print \$2}" | xargs svn add'
alias svdelete='sv delete'
alias svhelp='sv help' 
alias svblame='sv blame'
alias svdeletesvnfolders='find . -name ".svn" -exec rm -rf {} \;'
alias svexcludeswpfiles='sv propset svn:ignore "*.swp" .' 
alias svdeleteall='sv status | grep "^\!" | awk "{print \$2}" | xargs svn delete'

svupdate (){
  sv update | highlight red "C .*" green "G .*" blue "A .*" yellow "D .*"
}

svstatus (){
  sv status | highlight red "D .*" green "\? .*" blue "A .*"
}

svgetinfo (){
  sv info $@
  sv log $@
}

if [ "$OS" = "darwin" ] ; then
  # You need to create fmdiff and fmresolve, which can be found at: http://ssel.vub.ac.be/ssel/internal:fmdiff
  alias svdiff='sv diff --diff-cmd fmdiff' # OS-X SPECIFIC
  alias svdiffremote='sv diff -r HEAD --diff-cmd fmdiff' # OS-X SPECIFIC
  # Use diff for command line diff, use fmdiff for gui diff, and svdiff for subversion diff
fi


# git ------------------------------------------------
alias gtshowcommands="echo -e '${COLOR_LIGHT_PURPLE}Available commands: 
   ${COLOR_BLUE}gt
   ${COLOR_BLUE}gt${COLOR_NC}init
   ${COLOR_BLUE}gt${COLOR_NC}commit    ${COLOR_GRAY}Example: gtcommit \"Your message here\"
   ${COLOR_BLUE}gt${COLOR_NC}commit${COLOR_BLUE}all${COLOR_NC}    ${COLOR_GRAY}Example: gtcommitall \"Your message here\"
   ${COLOR_BLUE}gt${COLOR_NC}add       ${COLOR_GRAY}Example: gtadd your_file
   ${COLOR_BLUE}gt${COLOR_NC}add${COLOR_BLUE}all${COLOR_NC}    ${COLOR_GRAY}Note: adds all files not in repository [recursively]
   ${COLOR_BLUE}gt${COLOR_NC}show
   ${COLOR_BLUE}gt${COLOR_NC}grep
   ${COLOR_BLUE}gt${COLOR_NC}diff
   ${COLOR_BLUE}gt${COLOR_NC}diff${COLOR_BLUE}staged${COLOR_NC}
   ${COLOR_BLUE}gt${COLOR_NC}merge
   ${COLOR_BLUE}gt${COLOR_NC}merge${COLOR_BLUE}head${COLOR_NC}
   ${COLOR_BLUE}gt${COLOR_NC}merge${COLOR_BLUE}with${COLOR_NC}tool
   ${COLOR_BLUE}gt${COLOR_NC}push
   ${COLOR_BLUE}gt${COLOR_NC}pull
   ${COLOR_BLUE}gt${COLOR_NC}fetch
   ${COLOR_BLUE}gt${COLOR_NC}checkout  ${COLOR_GRAY}(switch branch or revert) Example: gtcheckout your_file or gtcheckout your_local_branch  
   ${COLOR_BLUE}gt${COLOR_NC}checkout${COLOR_BLUE}tracking${COLOR_NC}branch${COLOR_NC}  ${COLOR_GRAY}Example: gtcheckouttrackingbranch your_branch  
   ${COLOR_BLUE}gt${COLOR_NC}blame
   ${COLOR_BLUE}gt${COLOR_NC}log
   ${COLOR_BLUE}gt${COLOR_NC}log${COLOR_BLUE}short${COLOR_NC}
   ${COLOR_BLUE}gt${COLOR_NC}log${COLOR_BLUE}graph${COLOR_NC}
   ${COLOR_BLUE}gt${COLOR_NC}log${COLOR_BLUE}grep${COLOR_NC}
   ${COLOR_BLUE}gt${COLOR_NC}log${COLOR_BLUE}for${COLOR_NC}user
   ${COLOR_BLUE}gt${COLOR_NC}branch
   ${COLOR_BLUE}gt${COLOR_NC}branch${COLOR_BLUE}delete${COLOR_NC}
   ${COLOR_BLUE}gt${COLOR_NC}branch${COLOR_BLUE}list${COLOR_NC}all
   ${COLOR_BLUE}gt${COLOR_NC}status
'"

alias gt='git'
alias gtinit='gt init'
alias gtclone='gt clone'
alias gtadd='gt add'
alias gtaddall='gt add .'
alias gtdiff='gt diff'
alias gtdiffstaged='gt diff --cached'
alias gtpush='gt push'
alias gtfetch='gt fetch'
alias gthelp='gt help'
alias gtpull='gt pull'
alias gtremove='gt rm'
alias gtmove='gt mv'
alias gtshow='gt show'
alias gtblame='gt blame'
alias gtstatus='gt status'
alias gtmerge='gt merge'
alias gtmergehead='gt merge origin/master'
alias gtmergewithtool='gt mergetool'
alias gttagadd='gt tag -a'
alias gttaglist='gt tag -l'
alias gtbranch='gt branch'
alias gtbranchdelete='gt branch -d'
alias gtbranchlistall='gt branch -a'
alias gtstash='gt stash'
alias gtstashsave='gt stash save'
alias gtstashlist='gt stash list'
alias gtstashapply='gt stash apply'
alias gtmovelastcommittostaged='gt reset --soft HEAD^'

gtcommit(){
  gt commit -m "$@"
}

gtcommitall(){
  gt commit -a -v -m "$@"
}

gtpushorigin(){
  gt push origin $@
}

gtcheckout (){
  gt checkout $1
  gt branch
}
gtcheckouttrackingbranch (){
  gt checkout -tlb $1 origin/$1
  gt branch
}

alias gtlog='gt log --name-status'
alias gtlogshort='gt log --pretty=oneline'
alias gtloggraph='gt log --graph'
gtlogforuser(){
  gtlog --author=$1
}
gtloggrep(){
  gtlog | grep $@ -B20 -A20
}

gtgrep(){
  gt grep -n -e "$@" | highlight green "$@" blue "^.*\:"
}



# Rails and Rake -------------------------------------------------
alias rrshowcommands="echo -e '${COLOR_LIGHT_PURPLE}Available commands: 
   ${COLOR_BLUE}rr${COLOR_NC}server
   ${COLOR_BLUE}rr${COLOR_NC}server${COLOR_BLUE}production
   ${COLOR_BLUE}rr${COLOR_NC}generate
   ${COLOR_BLUE}rr${COLOR_NC}console
   ${COLOR_BLUE}rr${COLOR_NC}test
   ${COLOR_BLUE}rr${COLOR_NC}test${COLOR_BLUE}summary
   ${COLOR_BLUE}rr${COLOR_NC}rake${COLOR_BLUE}list
   ${COLOR_BLUE}rr${COLOR_NC}migrate
   ${COLOR_BLUE}rr${COLOR_NC}migrate${COLOR_BLUE}test
   ${COLOR_BLUE}rr${COLOR_NC}migrate${COLOR_BLUE}down
   ${COLOR_BLUE}rr${COLOR_NC}migrate${COLOR_BLUE}up
'"

alias rrserver='./script/server'
alias rrserverproduction='./script/server -e production'
alias rrgenerate='./script/generate'
alias rrconsole='./script/console'

alias rrrakelist='rake -T | g ":"'
alias rrrakefind='rake -T | g '

rrtest(){
  date
  rake | highlight red " [1-9]0* failures" red " [1-9]0* errors"
  date
}

rrtestsingle(){
  rake test:units TEST="$@" | awk -F"," '{printf("%20s%20s%20s%20s\n", $1,$2,$3,$4)}' | highlight red " [1-9]0* failures" red " [1-9]0* errors"
}

rrtestsummary(){
  date
  rake | grep "tests," | awk -F"," '{printf("%20s%20s%20s%20s\n", $1,$2,$3,$4)}' | highlight red " [1-9]0* failures" red " [1-9]0* errors"
  date
}

alias rrmigrate='rake db:migrate'
rrmigratedown (){
  rake db:migrate:down VERSION=$@
}
rrmigrateup (){
  rake db:migrate:up VERSION=$@
}
alias rrmigratetest='rake db:migrate RAILS_ENV="test"'



# MySQL ------------------------------------------------
alias mqshowcommands="echo -e '${COLOR_LIGHT_PURPLE}Available commands: 
   ${COLOR_BLUE}mq${COLOR_NC}databases${COLOR_NC}
   ${COLOR_BLUE}mq${COLOR_NC}use${COLOR_BLUE}database${COLOR_NC}
   ${COLOR_BLUE}mq${COLOR_NC}create${COLOR_BLUE}database${COLOR_NC}
   ${COLOR_BLUE}mq${COLOR_NC}drop${COLOR_BLUE}database${COLOR_NC}
   ${COLOR_BLUE}mq${COLOR_NC}tables${COLOR_NC}
   ${COLOR_BLUE}mq${COLOR_NC}fields${COLOR_NC}
   ${COLOR_BLUE}mq${COLOR_NC}run              ${COLOR_GRAY}Example: mqrun \"Select id From foo\"
   ${COLOR_BLUE}mq${COLOR_NC}file${COLOR_BLUE}run${COLOR_NC}          ${COLOR_GRAY}Example: mqfilerun file_name
   ${COLOR_BLUE}mq${COLOR_NC}file${COLOR_BLUE}run${COLOR_NC}to${COLOR_BLUE}file${COLOR_NC}    ${COLOR_GRAY}Example: mqrunfiletofile file_name out_file_name
   ${COLOR_BLUE}mq${COLOR_NC}all${COLOR_NC}
   ${COLOR_BLUE}mq${COLOR_NC}all${COLOR_BLUE}count${COLOR_NC}
   ${COLOR_BLUE}mq${COLOR_NC}all${COLOR_BLUE}grep${COLOR_NC}
'"

export MYSQL_DEFAULT_DB=mysql
export MYSQL_DEFAULT_USER=root

mqusedatabase (){
  export MYSQL_DEFAULT_DB=$@
  mqrun  "show tables"
}

mqrun (){
  mysql -u ${MYSQL_DEFAULT_USER} -t -D ${MYSQL_DEFAULT_DB} -vvv -e "$@" | highlight blue '[|+-]'
}
mqfilerun (){
  mysql -u ${MYSQL_DEFAULT_USER} -t -vvv ${MYSQL_DEFAULT_DB} < $@ | highlight blue '[|+-]'
}
mqfileruntofile (){
  mysql -u ${MYSQL_DEFAULT_USER} -t -vvv ${MYSQL_DEFAULT_DB} < $1 >> $2
}
mqrunfiletoeditor (){
  mysql -u ${MYSQL_DEFAULT_USER} -t -vvv ${MYSQL_DEFAULT_DB} < $1 | vim - 
}

mqall (){
  mysql -u ${MYSQL_DEFAULT_USER} -t -D ${MYSQL_DEFAULT_DB} -vvv -e "select * from $@" | highlight blue '[|+-]'
}
mqallcount (){
  mysql -u ${MYSQL_DEFAULT_USER} -t -D ${MYSQL_DEFAULT_DB} -vvv -e "select count(*) from $@" | highlight blue '[|+-]'
}

mqallgrep (){
  mysql -u ${MYSQL_DEFAULT_USER} -t -D ${MYSQL_DEFAULT_DB} -vvv -e "select * from $1" | g "$2"
}

alias mqdatabases='mqrun "show databases"' 
alias mqtables='mqrun  "show tables"' 
mqfields(){
  mqrun "describe $@"
}

mqcreatedatabase(){
  mysqladmin -u ${MYSQL_DEFAULT_USER} create $@
  echo "$@ Created" | highlight blue '.*'
}

mqdropdatabase(){
  echo Warning | highlight red '.*'
  mysqladmin -u ${MYSQL_DEFAULT_USER} drop $@ 
}
